apiVersion: v1                # API 그룹과 버전
kind: Pod                     # 생성할 리소스 종류
metadata:
  name: nginx-pod             # 리소스 이름
spec:
  containers:
    - name: nginx-container   # 컨테이너 이름
      image: nginx:1.27.1     # 사용할 Docker 이미지
      ports:
        - containerPort: 80   # 컨테이너 내부에서 사용할 포트

# 참고
# - 'apiVersion'과 'kind' 조합이 리소스 타입을 결정 -> kubectl api-resources로 확인 가능
# - 'containerPort'는 문서화 및 Service 매핑 참고용 (실제 포트 바인딩은 컨테이너 이미지에 따라 자동 처리)

## kubectl apply -f nginx-pod.yaml
## kubectl get pods
## kubectl delete pod nginx-pod(metadata.name)


## nginx pod 접속하기
# 1. 컨테이너 내부 접속하기: kubectl exec -it <metadata.name> -- bash => curl 명령어 사용
# 2. pod와 local Port Forwarding: kubectl port-forward pod/<metadata.name> <local.port>:<pod.port>
#      참고: 리눅스에선 1024번 이상 포트 사용 권장 (권한 문제 없음)