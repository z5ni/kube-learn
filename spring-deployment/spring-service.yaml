apiVersion: v1
kind: Service

# Service 기본 정보
metadata:
  name: spring-service

# Service 세부 정보
spec:
  type: NodePort              # Service 종류: NodePort-외부 노드 포트를 통해 접근 가능
  selector:
    app: backend-app          # 라벨이 app=backend-app 인 Pod와 연결
  ports:
    - protocol: TCP           # 사용할 프로토콜 (HTTP 대부분은 TCP)
      port: 8080              # 클러스터 내부에서 서비스가 노출하는 포트
      targetPort: 8080        # 실제 백엔드 Pod 컨테이너가 열고 있는 포트
      nodePort: 30000         # 외부에서 접근할 수 있는 고정 포트


## 요청 흐름 ##
# 클러스터 외부 -> Node IP:30000 -> Service (port 8080) -> Pod (targetPort 8080)

## Kubenetes Service 종류 ##
# ClusterIP(default): Pod 간 통신용. 외부 접근 불가 => 같은 클러스터 내부 통신만 필요
# NodePort: 노드 IP + 포트를 통해 외부에서 접근 가능 => 간단하게 외부에서 접근
# LoadBalancer: 클라우드 Provider의 L4 로드밸런서를 통해 접근 가능 => 클라우드 환경에서 서비스 오픈
# ExternalName: Service -> 외부 DNS 이름으로 프록시 => 외부 서비스에 이름만 연결
# Headless(None): 로드밸런싱 없이 각 Pod IP 직접 노출 => StatefulSet 등에서 각 Pod 직접 접근